declare("InternetOpenA", "wininet.dll")(ptr int8, int32, ptr int8, ptr int8, int32);
declare("InternetConnectA", "wininet.dll")(int, ptr int8, int32, ptr int8, ptr int8, int32, int32, ptr int32);
declare("HttpOpenRequestA", "wininet.dll")(int, ptr int8, ptr int8, ptr int8, ptr int8, ptr int8, int32, ptr int32);
declare("HttpSendRequestA", "wininet.dll")(int, ptr int8, int32, ptr int8, int32);
declare("InternetReadFile", "wininet.dll")(int, ptr int8, int32, ptr int16);
declare("InternetCloseHandle", "wininet.dll")(int);
declare("RtlAllocateHeap", "ntdll.dll")(int, int, int);
declare("RtlReAllocateHeap", "ntdll.dll")(int, int, ptr int8, int);
declare("RtlCreateHeap", "ntdll.dll")(int64, ptr int, int, int, ptr int, ptr int);

import libraries.utils.memory

ptr int8 fn HTTPGet(ptr int8 server, ptr int8 url) {
    string user_agent = "Panda HTTP library";
    int16 bytes_read = 0xffff;
    int hInternet = InternetOpenA(user_agent, 1, NULL, NULL, 0);
    int hConnect = InternetConnectA(hInternet, server, 80, NULL, NULL, 3, 0, NULL);
    string method = "GET";
    int request= HttpOpenRequestA(hConnect, method, url, NULL, NULL, NULL, 0, NULL);
    HttpSendRequestA(request, NULL, NULL, NULL, 0);
    int heap_handle = RtlCreateHeap(2, NULL, 0, 0, NULL, NULL);
    int buffer = RtlAllocateHeap(heap_handle, 8, 1024);
    int data = RtlAllocateHeap(heap_handle, 8, 1024);
    InternetReadFile(request, (ptr int8)buffer, 1024, &bytes_read);
    int total_size = 0;
    while(bytes_read == 1024) {
        memcpy((ptr int8)buffer, (ptr int8)(data + total_size), (int)bytes_read);
        total_size += bytes_read;
        data = RtlReAllocateHeap(heap_handle, 8, (ptr int8)data, total_size + 1024);
        InternetReadFile(request, (ptr int8)buffer, 1024, &bytes_read);
    }
    memcpy((ptr int8)buffer, (ptr int8)(data + total_size), (int)bytes_read);
    InternetCloseHandle(hInternet);
    InternetCloseHandle(hConnect);
    InternetCloseHandle(request);
    return (ptr int8)data;
}
