declare("RtlCreateHeap", "ntdll.dll")(int64, int, int, int, int, int);
declare("RtlAllocateHeap", "ntdll.dll")(int, int64, int);

int fn strlen(ptr int8 str) {
   int cnt = 0;
   int8 char = str[cnt];
   while(char > 0) {
      cnt += 1;
      char = str[cnt];
   }
   return cnt;
}

int fn strcmp(ptr int8 str1, ptr int8 str2) {
   int len1 = strlen(str1);
   int len2 = strlen(str2);
   int cnt = 0;
   if (len1 != len2) {
      return 0;
   }
   while(cnt <= len1) {
      int a = str1[cnt];
      int b = str2[cnt];
      if(a != b) {
         return 0;
      }
      cnt += 1;
   }
   return 1;
}

ptr int8 fn strcat(ptr int8 str1, ptr int8 str2) {
   int len1 = strlen(str1);
   int len2 = strlen(str2);
   int totalLength = len1 + len2;
   totalLength += 1;
   int heap_handle = RtlCreateHeap(2, 0, 0, 0, 0, 0);
   int newStr = RtlAllocateHeap(heap_handle, 8, totalLength);
   newStr = ptr int8;
   int cnt = 0;
   while(cnt <= len1) {
        newStr[cnt] = str1[cnt];
        cnt += 1;
   }
   cnt = 0;
   while(cnt <= len2) {
        int idx = cnt + len1;
        newStr[idx] = str2[cnt];
        cnt += 1;
   }
   newStr[totalLength] = 0;
   return newStr;
}


