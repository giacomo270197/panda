from llvmlite import ir

test_instructions = {
    "EqualityStatementNode": "==",
    "InequalityStatementNode": "!=",
    "GreaterStatementNode": ">",
    "GreaterEqualStatementNode": ">=",
    "LowerStatementNode": "<",
    "LowerEqualStatementNode": "<="
}

type_mappings = {
    "int8": ir.IntType(8),
    "int16": ir.IntType(16),
    "int32": ir.IntType(32),
    "int64": ir.IntType(64),
    "ptr int8": ir.PointerType(ir.IntType(8)),
    "ptr int16": ir.PointerType(ir.IntType(16)),
    "ptr int32": ir.PointerType(ir.IntType(32)),
    "ptr int64": ir.PointerType(ir.IntType(64))
}

size_mappings = {
    "i8": 8,
    "i16": 16,
    "i32": 32,
    "i64": 64,
}

register_size_mapping = {
    "rax": 64,
    "rcx": 64,
    "rdx": 64,
    "rsi": 64,
    "rdi": 64,
    "rbp": 64,
    "rsp": 64,
    "r8": 64,
    "r9": 64,
    "r10": 64,
    "r11": 64,
    "r12": 64,
    "r13": 64,
    "r14": 64,
    "r15": 64,
    "eax": 32,
    "ebx": 32,
    "ecx": 32,
    "edx": 32,
    "esi": 32,
    "edi": 32,
    "ebp": 32,
    "esp": 32,
    "r8d": 32,
    "r9d": 32,
    "r10d": 32,
    "r11d": 32,
    "r12d": 32,
    "r13d": 32,
    "r14d": 32,
    "r15d": 32,
    "cx": 16,
    "dx": 16,
    "si": 16,
    "di": 16,
    "bp": 16,
    "sp": 16,
    "r8w": 16,
    "r9w": 16,
    "r10w": 16,
    "r11w": 16,
    "r12w": 16,
    "r13w": 16,
    "r14w": 16,
    "r15w": 16,
    "al": 8,
    "bl": 8,
    "cl": 8,
    "dl": 8,
    "ah": 8,
    "bh": 8,
    "ch": 8,
    "dh": 8,
    "sil": 8,
    "dil": 8,
    "bpl": 8,
    "spl": 8,
    "r8b": 8,
    "r9b": 8,
    "r10b": 8,
    "r11b": 8,
    "r12b": 8,
    "r13b": 8,
    "r14b": 8,
    "r15b": 8
}
